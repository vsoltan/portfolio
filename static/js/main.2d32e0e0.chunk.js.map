{"version":3,"sources":["components/elements/ContactForm.js","assets/soltan-swe.pdf","components/elements/NavigationBar.js","assets/images/about-page/profPic.jpeg","components/elements/SocialTab.js","components/pages/Header.js","components/elements/ProjectCard.js","assets/images/project-page/portfolio/user.png","assets/images/project-page/opensprinkler/ops-tile.png","assets/images/project-page/accel/rtx-tile.png","assets/images/project-page/slide/slide-tile.png","assets/images/project-page/ea-intern/ea-logo.png","assets/images/project-page/ultimate/ultsoft.png","assets/images/project-page/ultimate/appView.png","assets/images/project-page/ultimate/postman.png","assets/images/project-page/mbed-pong/pong.png","assets/images/project-page/mbed-pong/game.png","assets/images/project-page/mbed-pong/side.png","assets/images/project-page/mbed-pong/top.png","assets/images/project-page/mbed-pong/server.png","assets/images/project-page/portfolio/iter1.png","assets/images/project-page/watch/board.png","assets/images/project-page/watch/watch-app.png","assets/images/project-page/watch/watch-music.png","assets/images/project-page/watch/watch-timer.png","assets/images/project-page/watch/watch-wear.png","assets/images/project-page/accel/ball-shadow.png","assets/images/project-page/accel/cow-acceled.png","assets/images/project-page/accel/teapot.png","assets/images/project-page/accel/ball-array.png","components/pages/Projects.js","components/pages/Thanks.js","components/pages/Footer.js","App.js","serviceWorker.js","index.js"],"names":["Styles","styled","div","ContactForm","props","submitForm","bind","state","status","this","errorMessage","submitButton","className","style","display","onSubmit","action","method","type","name","cols","rows","ev","preventDefault","form","target","data","FormData","xhr","XMLHttpRequest","open","setRequestHeader","onreadystatechange","readyState","DONE","reset","setState","send","React","Component","scrollToTop","scroll","NavigationBar","showContactForm","contactFormVisible","hideContactForm","showAboutPage","aboutPageVisible","hideAboutPage","toggleOverlayPopup","copiedOverlayVisible","emailButton","createRef","Container","onClick","id","href","resume","download","Modal","size","scrollable","show","onHide","Header","closeButton","Title","Body","SocialTab","rel","icon","faGithub","faLinkedin","faTwitter","wrappedContent","Image","src","profPic","ProjectCard","showOverlay","overlayVisible","hideOverlay","redirect","window","overlayData","redirectDemo","demoLink","img","title","scale","titleValue","subTitleValue","altValue","overlayBody","alt","width","Button","variant","visibility","length","ElectronicArtsCard","EAOverlay","Fragment","EALogo","UltimateCard","UHROverlay","postman","appView","ultsoft","PongCard","MBPOverlay","serverPong","topPong","sidePong","gamePong","pong","PortfolioCard","PFOverlay","iter1","PRO","OpenSprinklerCard","OSOverlay","OPS","SimpleWatchCard","WatchOverlay","watchWear","watchMusic","watchTimer","watchApp","board","AcceleratorCard","AccOverlay","cowAccel","ballShadow","teapot","ballAray","RTX","SlideCard","SlideOverlay","SLI","Featured","Acknowledgements","Footer","App","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"iTAIMA,EAASC,IAAOC,IAAV,o+BAiHGC,E,kDAvEX,WAAYC,GAAQ,IAAD,8BACf,cAAMA,IACDC,WAAa,EAAKA,WAAWC,KAAhB,gBAClB,EAAKC,MAAQ,CACTC,OAAQ,IAJG,E,0CAQnB,WACI,IAAQA,EAAWC,KAAKF,MAAhBC,OACJE,EAAe,sBACfC,EAAe,4CAkBnB,MAhBe,YAAXH,GAEAE,EACI,mBAAGE,UAAU,UAAUC,MAAO,CAAE,gBAAiB,QAAjD,qBAEJF,EACI,wBAAQE,MAAO,CAAEC,QAAS,QAA1B,qBAEc,UAAXN,GACQ,UAAXA,IACAE,EACI,mBAAGE,UAAU,QAAb,yCAMR,cAACZ,EAAD,UACI,uBACIY,UAAU,cACVG,SAAUN,KAAKJ,WACfW,OAAO,kCACPC,OAAO,OAJX,UAMI,2CACA,uBAAOC,KAAK,QAAQC,KAAK,UAEzB,6CACA,0BAAUA,KAAK,UAAUC,KAAK,KAAKC,KAAK,MAEvCX,EACAC,EACD,+B,wBAMhB,SAAWW,GAAK,IAAD,OACXA,EAAGC,iBACH,IAAMC,EAAOF,EAAGG,OACVC,EAAO,IAAIC,SAASH,GACpBI,EAAM,IAAIC,eAChBD,EAAIE,KAAKN,EAAKP,OAAQO,EAAKR,QAC3BY,EAAIG,iBAAiB,SAAU,oBAC/BH,EAAII,mBAAqB,WACjBJ,EAAIK,aAAeJ,eAAeK,OACnB,MAAfN,EAAIpB,QACJgB,EAAKW,QACL,EAAKC,SAAS,CAAE5B,OAAQ,aAExB,EAAK4B,SAAS,CAAE5B,OAAQ,YAGhCoB,EAAIS,KAAKX,O,GApESY,IAAMC,WC7CjB,MAA0B,uCCenCvC,G,kBAASC,IAAOC,IAAV,s1BAoCNsC,EAAc,WACnBC,gBAAOD,eAoFOE,E,kDAhFd,WAAYtC,GAAQ,IAAD,8BAClB,cAAMA,IAQPuC,gBAAkB,kBACjB,EAAKP,SAAS,CAAEQ,oBAAoB,KAVlB,EAYnBC,gBAAkB,kBACjB,EAAKT,SAAS,CAAEQ,oBAAoB,KAblB,EAenBE,cAAgB,kBACf,EAAKV,SAAS,CAAEW,kBAAkB,KAhBhB,EAkBnBC,cAAgB,kBACf,EAAKZ,SAAS,CAAEW,kBAAkB,KAnBhB,EAqBnBE,mBAAqB,kBACpB,EAAKb,SAAS,CAAEc,sBAAuB,EAAK3C,MAAM2C,wBApBlD,EAAK3C,MAAQ,CACZqC,oBAAoB,EACpBM,sBAAsB,EACtBH,kBAAkB,GAEnB,EAAKI,YAAcb,IAAMc,YAPP,E,0CAwBnB,WACC,OACC,cAAC,EAAD,UACC,qBAAKxC,UAAU,oCAAf,SACC,eAACyC,EAAA,EAAD,WACC,mBAAGzC,UAAU,eAAe0C,QAASd,EAArC,4BACA,wBAAQ5B,UAAU,8BAA8BM,KAAK,SAAS,cAAY,WAAW,cAAY,uBAAuB,gBAAc,sBAAsB,gBAAc,QAAQ,aAAW,oBAA7L,SACC,sBAAMN,UAAU,0BAEjB,qBAAKA,UAAU,2BAA2B2C,GAAG,sBAA7C,SACC,qBAAI3C,UAAU,kCAAd,UAIC,oBAAIA,UAAU,kBAAd,SACC,mBAAGA,UAAU,WAAW4C,KAAMC,EAAQC,SAAS,iBAA/C,sBAED,oBAAI9C,UAAU,WAAd,SACC,mBAAGA,UAAU,gBAAgB0C,QAAS7C,KAAKkC,gBAA3C,4BAKH,eAACgB,EAAA,EAAD,CAAOC,KAAK,KAAKC,YAAY,EAAMC,KAAMrD,KAAKF,MAAMqC,mBAAoBmB,OAAQtD,KAAKoC,gBAArF,UACC,cAACc,EAAA,EAAMK,OAAP,CAAcC,aAAW,EAAzB,SACC,cAACN,EAAA,EAAMO,MAAP,UACC,6CAGF,cAACP,EAAA,EAAMQ,KAAP,UACC,cAAC,EAAD,oB,GAvDoB7B,IAAMC,WCvDnB,MAA0B,qC,wBCcnCvC,EAASC,IAAOC,IAAV,uVAuCGkE,EAnBG,kBACd,cAAC,EAAD,UACI,sBAAKxD,UAAU,aAAf,UACI,mBAAG4C,KAAK,6BACJ5C,UAAU,qBAAqBa,OAAO,SAAS4C,IAAI,sBADvD,SAEI,cAAC,IAAD,CAAiBC,KAAMC,IAAUX,KAAK,SAE1C,mBAAGJ,KAAK,8CACJ5C,UAAU,uBAAuBa,OAAO,SAAS4C,IAAI,sBADzD,SAEI,cAAC,IAAD,CAAiBC,KAAME,IAAYZ,KAAK,SAE5C,mBAAGJ,KAAK,+BACJ5C,UAAU,sBAAsBa,OAAO,SAAS4C,IAAI,sBADxD,SAEI,cAAC,IAAD,CAAiBC,KAAMG,IAAWb,KAAK,eCtCjD5D,EAASC,IAAOC,IAAV,o7CAqENwE,EAAiB,CAAC,oFAAD,wDAsCRV,EApCA,kBACX,cAAC,EAAD,UACI,qBAAKT,GAAG,WAAR,SACI,cAACF,EAAA,EAAD,CAAWzC,UAAU,YAArB,SACI,sBAAKA,UAAU,aAAf,UACI,sBAAKA,UAAU,eAAf,UACA,qBAAKA,UAAU,SAAf,SACQ,sDAfN,kBAeM,OAA2C,oBAAGA,UAAU,OAAO4C,KAbxE,sBAa0F/B,OAAO,SAAS4C,IAAI,sBAA1D,UAdnD,kBAcmD,YAE/C,cAAC,EAAD,IACA,sBAAKzD,UAAU,QAAf,UACI,gKACA,mBAAG2C,GAAG,kBAAN,kJACA,mBAAGA,GAAG,oBAAN,mEAGJ,qBAAKA,GAAG,eAAR,SACI,4BAAImB,EAAe,UAK3B,sBAAK9D,UAAU,0BAAf,UACI,cAAC+D,EAAA,EAAD,CAAOC,IAAKC,EAASjE,UAAU,aAC/B,sBAAK2C,GAAG,cAAR,UACI,4BAAImB,EAAe,KACnB,4BAAIA,EAAe,qB,QChGzC1E,EAASC,IAAOC,IAAV,i8CAwIG4E,E,kDA3EX,WAAY1E,GAAQ,IAAD,8BACf,cAAMA,IAUV2E,YAAc,kBACV,EAAK3C,SAAS,CAAE4C,gBAAgB,KAZjB,EAcnBC,YAAc,kBACV,EAAK7C,SAAS,CAAE4C,gBAAgB,KAfjB,EAiBnBE,SAAW,kBACPC,OAAOrD,KACH,EAAKsD,YAAY,GACjB,WApBW,EAuBnBC,aAAe,kBACXF,OAAOrD,KACH,EAAKwD,SACL,WAxBJ,EAAKC,IAAMnF,EAAMmF,IACjB,EAAKC,MAAQpF,EAAMoF,MACnB,EAAKC,MAAQrF,EAAMqF,MACnB,EAAKH,SAAWlF,EAAMkF,SACtB,EAAK/E,MAAQ,CACTyE,gBAAgB,GAEpB,EAAKI,YAAchF,EAAMgF,YATV,E,0CA+BnB,WACI,IAAMM,EAAajF,KAAK+E,MAAM,GAC1BG,EAAgBlF,KAAK+E,MAAM,GAC3BI,EAAWnF,KAAK+E,MAAM,GAEpBK,EAAcpF,KAAK2E,YAAY,GAErC,OACI,eAAC,EAAD,WACI,sBAAKxE,UAAU,eAAe0C,QAAS7C,KAAKsE,YAA5C,UACI,sBAAKnE,UAAU,iBAAf,UACI,qBAAKA,UAAU,WAAWgE,IAAKnE,KAAK8E,IAAKO,IAAKF,EAAU/E,MAAO,CAAEkF,MAAOtF,KAAKgF,MAAQ,OACrF,sBAAM7E,UAAU,eAEpB,sBAAKA,UAAU,iBAAf,UACI,mBAAG2C,GAAI,gBAAP,SAAyBmC,IACzB,mBAAGnC,GAAI,oBAAP,SAA6BoC,UAGrC,eAAChC,EAAA,EAAD,CAAOC,KAAK,KAAKC,YAAY,EAAMC,KAAMrD,KAAKF,MAAMyE,eAAgBjB,OAAQtD,KAAKwE,YAAjF,UACI,cAACtB,EAAA,EAAMK,OAAP,CAAcC,aAAW,EAAzB,SACI,eAACN,EAAA,EAAMO,MAAP,WACI,6BAAKwB,IACL,6BAAKC,SAGb,eAAChC,EAAA,EAAMQ,KAAP,WACK0B,EACD,cAACG,EAAA,EAAD,CAAQC,QAAQ,UAAUrF,UAAU,kBAAkB0C,QAAS7C,KAAKyE,SAAUrE,MAAO,CAAEqF,WAAazF,KAAK2E,YAAYe,OAAS,EAAI,UAAY,UAA9I,SACI,sBAAKvF,UAAU,cAAf,UACI,cAAC,IAAD,CAAiB0D,KAAMC,IAAU3D,UAAU,gBAC3C,mBAAGA,UAAU,WAAb,sBAGR,cAACoF,EAAA,EAAD,CAAQC,QAAQ,UAAUrF,UAAU,mBAAmB0C,QAAS7C,KAAK4E,aAAcxE,MAAO,CAAEC,QAAUL,KAAK6E,SAAW,QAAU,QAAhI,SACI,oD,GAnEFhD,IAAMC,WCtEjB,MAA0B,iCCA1B,MAA0B,qCCA1B,MAA0B,qCCA1B,MAA0B,uCCA1B,MAA0B,oCCA1B,MAA0B,oCCA1B,MAA0B,oCCA1B,MAA0B,oCCA1B,MAA0B,iCCA1B,MAA0B,iCCA1B,MAA0B,iCCA1B,MAA0B,gCCA1B,OAA0B,mCCA1B,OAA0B,kCCA1B,OAA0B,kCCA1B,OAA0B,sCCA1B,OAA0B,wCCA1B,OAA0B,wCCA1B,OAA0B,uCCA1B,OAA0B,wCCA1B,OAA0B,wCCA1B,OAA0B,mCCA1B,OAA0B,uCCyCnCvC,GAASC,IAAOC,IAAV,onBAyBZ,SAASkG,KACL,IA2BMC,EAAY,CArBd,eAAC,IAAMC,SAAP,WACI,qBAAK1F,UAAU,gCAGf,sBAAKA,UAAU,sBAAf,UACG,8OAIA,04BAgBX,OACI,cAAC,EAAD,CAAa4E,MAhCA,CACb,kBACA,kBACA,wBA6B8BD,IAAKgB,EAAQd,MAAO,GAAIL,YAAaiB,IAI3E,SAASG,KACL,IAwDMC,EAAa,CAlDf,eAAC,IAAMH,SAAP,WACI,qBAAK1F,UAAU,8BAAf,SACI,cAAC+D,EAAA,EAAD,CAAOC,IAAK8B,EAAS9F,UAAU,6BAEnC,qBAAKA,UAAU,kBAAf,SACI,cAAC+D,EAAA,EAAD,CAAOC,IAAK+B,EAAS/F,UAAU,6BAEnC,sBAAKA,UAAU,sBAAf,UACI,kzBAUA,ymCAYA,wtCAWA,2iBAWR,uDAEJ,OACI,cAAC,EAAD,CAAa4E,MA7DA,CACb,gBACA,yBACA,0BA0D8BD,IAAKqB,EAASnB,MAAO,GAAIL,YAAaqB,IAK5E,SAASI,KACL,IAuDMC,EAAa,CAjDf,eAAC,IAAMR,SAAP,WACI,sBAAK1F,UAAU,kBAAf,UACI,cAAC+D,EAAA,EAAD,CAAOC,IAAKmC,GAAYnG,UAAU,2BAClC,cAAC+D,EAAA,EAAD,CAAOC,IAAKoC,EAASpG,UAAU,2BAC/B,cAAC+D,EAAA,EAAD,CAAOC,IAAKqC,EAAUrG,UAAU,2BAChC,cAAC+D,EAAA,EAAD,CAAOC,IAAKsC,EAAUtG,UAAU,8BAEpC,sBAAKA,UAAU,sBAAf,UACI,iHAEI,mBAAGA,UAAU,OAAO4C,KAAK,gCAAgC/B,OAAO,SAAS4C,IAAI,sBAA7E,2BAFJ,+aAQA,iwBAUA,mcAMA,2pBAQA,wVAWR,gCAEJ,OACI,cAAC,EAAD,CAAamB,MA5DA,CACb,YACA,mBACA,aAyD8BD,IAAK4B,EAAM1B,MAAO,GAAIL,YAAa0B,EAAYxB,SAAU,iEAK/F,SAAS8B,KACL,IAkCMC,EAAY,CA5Bd,eAAC,IAAMf,SAAP,WACI,qBAAK1F,UAAU,kBAAf,SACI,cAAC+D,EAAA,EAAD,CAAOC,IAAK0C,GAAO1G,UAAU,6BAEjC,sBAAKA,UAAU,sBAAf,UACI,0qBAOA,yoBAOA,wlBAWR,wCAEJ,OACI,cAAC,EAAD,CAAa4E,MAvCD,CACZ,mBACA,YACA,eAoC6BD,IAAKgC,EAAK9B,MAAO,GAAIL,YAAaiC,IAIvE,SAASG,KACL,IAqBMC,EAAY,CAfd,eAAC,IAAMnB,SAAP,WACI,qBAAK1F,UAAU,kBAAf,SACI,cAAC+D,EAAA,EAAD,CAAOC,IAAK8C,EAAK9G,UAAU,6BAE/B,qBAAKA,UAAU,sBAAf,SACI,4cAYR,2DAEJ,OACI,cAAC,EAAD,CAAa4E,MA1BD,CACZ,gBACA,kBACA,2BAuB6BD,IAAKmC,EAAKjC,MAAO,GAAIL,YAAaqC,EAAWnC,SAAU,kCAI5F,SAASqC,KACL,IAuCMC,EAAe,CAjCjB,eAAC,IAAMtB,SAAP,WACI,sBAAK1F,UAAU,kBAAf,UACI,cAAC+D,EAAA,EAAD,CAAOC,IAAKiD,GAAWjH,UAAU,2BACjC,cAAC+D,EAAA,EAAD,CAAOC,IAAKkD,GAAYlH,UAAU,2BAClC,cAAC+D,EAAA,EAAD,CAAOC,IAAKmD,GAAYnH,UAAU,2BAClC,cAAC+D,EAAA,EAAD,CAAOC,IAAKoD,GAAUpH,UAAU,8BAEpC,sBAAKA,UAAU,sBAAf,UACI,0HAEI,mBAAGA,UAAU,OAAO4C,KAAK,gCAAgC/B,OAAO,SAAS4C,IAAI,sBAA7E,2BAFJ,qSAOA,6kBAOA,2wBAaR,uCAEJ,OACI,cAAC,EAAD,CAAamB,MA5CE,CACf,eACA,mBACA,qBAyCgCD,IAAK0C,GAAOxC,MAAO,GAAIL,YAAawC,EAActC,SAAU,iEAIpG,SAAS4C,KACL,IAqCMC,EAAa,CA/Bf,eAAC,IAAM7B,SAAP,WACI,sBAAK1F,UAAU,kBAAf,UACI,cAAC+D,EAAA,EAAD,CAAOC,IAAKwD,GAAUxH,UAAU,2BAChC,cAAC+D,EAAA,EAAD,CAAOC,IAAKyD,GAAYzH,UAAU,2BAClC,cAAC+D,EAAA,EAAD,CAAOC,IAAK0D,GAAQ1H,UAAU,2BAC9B,cAAC+D,EAAA,EAAD,CAAOC,IAAK2D,GAAU3H,UAAU,8BAEpC,sBAAKA,UAAU,sBAAf,UACI,0eAMA,msBAQA,ofAWR,wCAEJ,OACI,cAAC,EAAD,CAAa4E,MA1CA,CACb,yBACA,uBACA,qBAuC8BD,IAAKiD,EAAK/C,MAAO,GAAIL,YAAa+C,EAAY7C,SAAU,iEAI9F,SAASmD,KACL,IAgCMC,EAAe,CAzBjB,eAAC,IAAMpC,SAAP,WACI,qBAAK1F,UAAU,oBACf,sBAAKA,UAAU,sBAAf,UACI,4XAKA,y4BASA,2WAUR,oCAEJ,OACI,cAAC,EAAD,CAAa4E,MArCE,CACf,sBACA,mBACA,oBAkCgCD,IAAKoD,EAAKlD,MAAO,GAAIL,YAAasD,IAK1E,I,MAkBeE,GAlBE,kBACb,cAAC,GAAD,UACI,eAACvF,EAAA,EAAD,WACI,oBAAIE,GAAI,QAAR,sBACA,sBAAK3C,UAAU,kBAAf,UACKwF,KACAI,KACAK,KACAc,KACAO,KACAd,KACAI,KACAiB,cCzcXzI,GAASC,IAAOC,IAAV,iKAuBG2I,GAbU,kBACrB,cAAC,GAAD,UACI,eAACxF,EAAA,EAAD,WACI,oBAAIE,GAAG,QAAP,wBACA,uVCbNvD,GAASC,IAAOC,IAAV,qHAeG4I,GARA,kBACX,cAAC,GAAD,UACI,cAACzF,EAAA,EAAD,UACI,0ECGG0F,OAZf,WACE,OACE,sBAAKnI,UAAU,MAAf,UACE,cAAC,EAAD,IACA,cAAC,EAAD,IACA,cAAC,GAAD,IACA,cAAC,GAAD,IACA,cAAC,GAAD,QCFcoI,QACW,cAA7B7D,OAAO8D,SAASC,UAEa,UAA7B/D,OAAO8D,SAASC,UAEhB/D,OAAO8D,SAASC,SAASC,MACvB,2DCZJC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,GAAD,MAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.2d32e0e0.chunk.js","sourcesContent":["\nimport React from \"react\";\nimport styled from \"styled-components\"\n\nconst Styles = styled.div`\n   .contactForm {\n        margin-top: 5px; \n        margin-bottom: 5px; \n        display: grid; \n        grid-template-columns: 100px 1fr 75px;\n        grid-gap: 5px;\n   }\n   label {\n        grid-column: 1 / 2;\n        font-family: Metropolis-Regular;\n   }\n   input, textarea {\n        grid-column: 2 / 4;\n        border-style: solid;\n        border-color: rgb(235, 235, 235); \n        border-width: 1px; \n   }\n   button {\n        grid-column: 3 / 4;\n        background-color: var(--highlight-color);\n        border-radius: 5px; \n        border-style: solid; \n        border-color: var(--highlight-color);\n        color: white; \n        margin: 15px 0 15px 0;\n   }\n   .alert {\n        grid-column: 2 / 3; \n        text-align: left; \n        padding: 0px;\n        margin-top: 1.2rem; \n        color: rgb(201, 87, 79);\n   }\n   .success {\n        grid-column: 3 / 4;\n        margin-top: 1.2rem; \n        color: rgb(19, 186, 4);\n   }\n`;\n\nclass ContactForm extends React.Component {\n    constructor(props) {\n        super(props);\n        this.submitForm = this.submitForm.bind(this);\n        this.state = {\n            status: \"\"\n        };\n    }\n\n    render() {\n        const { status } = this.state;\n        let errorMessage = <p></p>\n        let submitButton = <button>Submit</button>;\n\n        if (status === \"SUCCESS\") {\n            // offset the button margin with inline styling \n            errorMessage = (\n                <p className=\"success\" style={{ \"margin-bottom\": \"15px\" }}>Thanks!</p>\n            );\n            submitButton = (\n                <button style={{ display: \"none\" }}>Submit</button>\n            );\n        } else if (status === \"ERROR\") {\n            if (status === \"ERROR\") {\n                errorMessage = (\n                    <p className=\"alert\">Ooops! There was an error.</p>\n                );\n            }\n        }\n\n        return (\n            <Styles>\n                <form\n                    className=\"contactForm\"\n                    onSubmit={this.submitForm}\n                    action=\"https://formspree.io/f/xvovwpae\"\n                    method=\"POST\"\n                >\n                    <label>Email:</label>\n                    <input type=\"email\" name=\"email\" />\n\n                    <label>Message:</label>\n                    <textarea name=\"message\" cols=\"40\" rows=\"5\"></textarea>\n\n                    {errorMessage}\n                    {submitButton}\n                    <div></div>\n                </form>\n            </Styles>\n        );\n    }\n\n    submitForm(ev) {\n        ev.preventDefault();\n        const form = ev.target;\n        const data = new FormData(form);\n        const xhr = new XMLHttpRequest();\n        xhr.open(form.method, form.action);\n        xhr.setRequestHeader(\"Accept\", \"application/json\");\n        xhr.onreadystatechange = () => {\n            if (xhr.readyState !== XMLHttpRequest.DONE) return;\n            if (xhr.status === 200) {\n                form.reset();\n                this.setState({ status: \"SUCCESS\" });\n            } else {\n                this.setState({ status: \"ERROR\" });\n            }\n        };\n        xhr.send(data);\n    }\n}\n\nexport default ContactForm;","export default __webpack_public_path__ + \"static/media/soltan-swe.b135723b.pdf\";","\nimport React from 'react';\nimport { Container } from 'react-bootstrap';\nimport Modal from 'react-bootstrap/Modal';\nimport { animateScroll as scroll } from \"react-scroll\";\nimport styled from 'styled-components';\n\nimport ContactForm from \"../elements/ContactForm\";\n\nimport resume from '../../assets/soltan-swe.pdf';\n\nimport '../../App.css';\nimport '../../Overlay.css';\nimport \"bootstrap/js/src/collapse.js\";\n\nconst Styles = styled.div`\n    .navbar {\n      background-color: white;\n      padding: 1rem 1rem;\n      border-bottom-style: solid;\n      border-width: 1px;\n      border-color: black;\n    }\n    .navbar-nav .nav-link {\n      color: black;\n      font-size: 17px;\n    //   font-family: Metropolis-Bold;\n\t  font-family: Cereal-Bold;\n      padding: 0 1.5em 0 1.5em;\n      cursor: pointer;\n    }\n    .nav-link.last {\n      padding-right: 0em;\n    }\n    .navbar-brand {\n      color: black;\n      font-size: 20px;\n    //   font-family: Metropolis-Bold;\n\t  font-family: Cereal-Bold;\n      cursor: pointer;\n\t}\n    .nav-item { // to get collapse bar to the right\n      text-align: right;\n    }\n    @media screen and (min-width: 0px) and (max-width: 991px) {\n      .nav-link.last { \n        padding-right: 1.5rem;\n      }\n    }\n`;\n\nconst scrollToTop = () => {\n\tscroll.scrollToTop();\n};\n\nclass NavigationBar extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tcontactFormVisible: false,\n\t\t\tcopiedOverlayVisible: true,\n\t\t\taboutPageVisible: false,\n\t\t}\n\t\tthis.emailButton = React.createRef();\n\t}\n\tshowContactForm = () => (\n\t\tthis.setState({ contactFormVisible: true })\n\t)\n\thideContactForm = () => (\n\t\tthis.setState({ contactFormVisible: false })\n\t)\n\tshowAboutPage = () => (\n\t\tthis.setState({ aboutPageVisible: true })\n\t)\n\thideAboutPage = () => (\n\t\tthis.setState({ aboutPageVisible: false })\n\t)\n\ttoggleOverlayPopup = () => (\n\t\tthis.setState({ copiedOverlayVisible: !this.state.copiedOverlayVisible })\n\t)\n\trender() {\n\t\treturn (\n\t\t\t<Styles>\n\t\t\t\t<nav className=\"navbar navbar-expand-lg fixed-top\">\n\t\t\t\t\t<Container>\n\t\t\t\t\t\t<a className=\"navbar-brand\" onClick={scrollToTop}>valeriy soltan</a>\n\t\t\t\t\t\t<button className=\"navbar-toggler navbar-light\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarTogglerDemo02\" aria-controls=\"navbarTogglerDemo02\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n\t\t\t\t\t\t\t<span className=\"navbar-toggler-icon\"></span>\n\t\t\t\t\t\t</button>\n\t\t\t\t\t\t<div className=\"collapse navbar-collapse\" id=\"navbarTogglerDemo02\">\n\t\t\t\t\t\t\t<ul className=\"navbar-nav ml-auto mt-2 mt-lg-0\">\n\t\t\t\t\t\t\t\t{/* <li className=\"nav-item active\">\n\t\t\t\t\t\t\t\t\t<a className=\"nav-link\" onClick={this.showAboutPage}>About</a>\n\t\t\t\t\t\t\t\t</li> */}\n\t\t\t\t\t\t\t\t<li className=\"nav-item active\">\n\t\t\t\t\t\t\t\t\t<a className=\"nav-link\" href={resume} download='soltan-swe.pdf'>Resume</a>\n\t\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t\t<li className=\"nav-item\">\n\t\t\t\t\t\t\t\t\t<a className=\"nav-link last\" onClick={this.showContactForm}>Contact</a>\n\t\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t</ul>\n\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t<Modal size=\"lg\" scrollable={true} show={this.state.contactFormVisible} onHide={this.hideContactForm}>\n\t\t\t\t\t\t\t<Modal.Header closeButton>\n\t\t\t\t\t\t\t\t<Modal.Title>\n\t\t\t\t\t\t\t\t\t<h1>Contact</h1>\n\t\t\t\t\t\t\t\t</Modal.Title>\n\t\t\t\t\t\t\t</Modal.Header>\n\t\t\t\t\t\t\t<Modal.Body>\n\t\t\t\t\t\t\t\t<ContactForm />\n\t\t\t\t\t\t\t</Modal.Body>\n\t\t\t\t\t\t</Modal>\n\n\t\t\t\t\t\t{/* About me, should probably make this its own component */}\n\t\t\t\t\t\t{/* <Modal size=\"lg\" scrollable={true} show={this.state.aboutPageVisible} onHide={this.hideAboutPage}>\n\t\t\t\t\t\t\t<Modal.Header closeButton>\n\t\t\t\t\t\t\t\t<Modal.Title>\n\t\t\t\t\t\t\t\t\t<h1>About Me</h1>\n\t\t\t\t\t\t\t\t</Modal.Title>\n\t\t\t\t\t\t\t</Modal.Header>\n\t\t\t\t\t\t\t<Modal.Body>\n\t\t\t\t\t\t\t\t{/* <div className=\"project-gallery\">\n\t\t\t\t\t\t\t\t\t<Image src={umasscs} className=\"img-fluid gallery-item\" />\n\t\t\t\t\t\t\t\t\t<Image src={aubri} className=\"img-fluid gallery-item\" />\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\tThis is a work in progress!\n\t\t\t\t\t\t\t</Modal.Body>\n\t\t\t\t\t\t</Modal> */}\n\t\t\t\t\t</Container>\n\t\t\t\t</nav>\n\t\t\t</Styles>\n\t\t);\n\t}\n}\n\nexport default NavigationBar;","export default __webpack_public_path__ + \"static/media/profPic.314ce50c.jpeg\";","\nimport React from 'react';\nimport styled from 'styled-components';\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n    faLinkedin,\n    faGithub,\n    faTwitter,\n} from '@fortawesome/free-brands-svg-icons';\n\n\nimport '../../App.css';\n\nconst Styles = styled.div`\n    .social-tab {\n        padding-left: 0; \n        margin-top: 1.2rem;\n        margin-bottom: 1.2rem;\n    }\n    .social-item {\n        padding-right: 15px;\n    }\n    .twitter {\n        color: #49a1eb;\n    }\n    .github {\n        color: #000000; \n    }\n    .linkedin {\n        color: #0a66c2\n    }\n`\n\nconst SocialTab = () => (\n    <Styles>\n        <div className=\"social-tab\">\n            <a href=\"https://github.com/vsoltan\"\n                className=\"social-item github\" target=\"_blank\" rel=\"noopener noreferrer\">\n                <FontAwesomeIcon icon={faGithub} size=\"2x\" />\n            </a>\n            <a href=\"https://www.linkedin.com/in/valeriy-soltan/\"\n                className=\"social-item linkedin\" target=\"_blank\" rel=\"noopener noreferrer\">\n                <FontAwesomeIcon icon={faLinkedin} size=\"2x\" />\n            </a>\n            <a href=\"https://twitter.com/vsoltann\"\n                className=\"social-item twitter\" target=\"_blank\" rel=\"noopener noreferrer\">\n                <FontAwesomeIcon icon={faTwitter} size=\"2x\" />\n            </a>\n        </div>\n    </Styles>\n); \n\nexport default SocialTab; ","\nimport React from 'react';\nimport styled from 'styled-components';\nimport profPic from '../../assets/images/about-page/profPic.jpeg';\nimport { Container, Image } from 'react-bootstrap';\n\nimport '../../App.css';\nimport SocialTab from '../elements/SocialTab';\n\nconst Styles = styled.div`\n    .container {\n        margin-top: 5%;\n    }\n    p {\n        margin-bottom: 1.2rem;\n    }\n    .portrait {\n        object-fit: cover;\n        width: 100%;\n        box-sizing: border-box;\n        max-height: 450px;\n        border-radius: 5px;\n    }\n    #wrap-around {\n        display: none;\n    }\n    .header {\n        margin-bottom: 1.2rem;\n    }\n    @media screen and (min-width: 0px) and (max-width: 767px) {\n        #wrap-display { display: block; }\n        #sm-display-hide { display: block; }\n        #sm-display-reveal { display: none; }\n        .col-images { display: none; }  /* hide images on small screens */\n        \n    }\n    @media screen and (min-width: 768px) and (max-width: 991px) {\n        #wrap-display { \n            display: none; \n        }\n        #sm-display-hide {\n            display: none; \n        }\n        #sm-display-reveal {\n            display: block; \n        }\n        #wrap-around { \n            display: block;\n            padding-top: 1.5em; \n        }\n    }\n    @media screen and (min-width: 992px) {\n        #sm-display-hide {\n            display: block; \n        }\n        #sm-display-reveal {\n            display: none; \n        }\n    }\n    .custom-col {\n        display: flex; \n    }\n    .custom-row-1 {\n        margin-right: 15px; \n        position: relative; \n        flex: 1;\n    }\n    .custom-row-2 {\n        flex: 1;\n    }\n`;\n\nconst positionTitle = \"Software Intern\";\nconst companyName = \"Electronic Arts\";\nconst companyURL = \"https://www.ea.com/\";\n\n// const jobSearchYear = 2021; \n\nconst wrappedContent = [`Passionate about systems programming, clever algorithms, and distributed systems.`, `Enjoy playing beach volleyball, cooking, and gaming.`]\n\nconst Header = () => (\n    <Styles>\n        <div id=\"page-top\">\n            <Container className=\"container\">\n                <div className=\"custom-col\">\n                    <div className=\"custom-row-1\">\n                    <div className=\"header\">\n                            <h1>Hey, I'm Valeriy, a {positionTitle} at <a className=\"link\" href={companyURL} target=\"_blank\" rel=\"noopener noreferrer\">{companyName}.</a></h1>\n                        </div>\n                        <SocialTab />\n                        <div className=\"about\">\n                            <p>Currently working towards a B.S in Computer Science and a minor in Mathematics at the University of Massachusetts—Amherst.</p>\n                            <p id=\"sm-display-hide\"> Interested in deconstructing the way things work. Passionate about systems programming, clever algorithms, and distributed systems.</p>\n                            <p id=\"sm-display-reveal\">Interested in deconstructing the way things work. </p>\n                            \n                        </div>\n                        <div id=\"wrap-display\">\n                            <p>{wrappedContent[1]}</p>\n                            {/* <p>{wrappedContent[1]}</p> */}\n                        </div>\n                        \n                    </div>\n                    <div className=\"custom-row-2 col-images\">\n                        <Image src={profPic} className=\"portrait\" />\n                        <div id=\"wrap-around\">\n                            <p>{wrappedContent[0]}</p>\n                            <p>{wrappedContent[1]}</p>\n                        </div> \n                    </div>\n                </div>\n            </Container>\n        </div>\n    </Styles>\n);\n\n\nexport default Header;\n\n","\nimport React from 'react';\nimport styled from 'styled-components';\nimport Modal from 'react-bootstrap/Modal'\nimport Button from 'react-bootstrap/Button';\nimport { faGithub } from \"@fortawesome/free-brands-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\nimport '../../App.css';\n\nconst Styles = styled.div`\n    .project-card {\n        position: relative;\n        background-color: var(--card-background);\n        border-radius: 5px;\n        color: transparent;\n        cursor: pointer;\n        width: 100%;\n    }\n    .project-card:hover {\n        color: white;\n        box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19);\n    }\n    .project-card:hover .overlay {\n        opacity: 1;\n    }\n    .card-container {\n        height: 425px;\n        display: flex;\n        justify-content: center;\n        align-items: center;\n    }\n    .card-img {\n        height: auto;\n        max-height: 100%;\n    }\n    .overlay {\n        background-color: var(--highlight-reduced-opacity);\n        opacity: 0;\n        height: 100%;\n        width: 100%;\n        position: absolute;\n        border-radius: 5px;\n    }\n    .text-container {\n        position: absolute;\n        top: 0;\n    }\n    #project-title {\n        font-family: Metropolis-Bold;\n        font-size: 22px;\n        margin: 20px 0px 0px 20px;\n    }\n    #project-sub-title {\n        font-family: Metropolis-Regular;\n        font-size: 18px;\n        margin: 0px 0px 0px 20px;\n    }\n    @media screen and (min-width: 991px) {\n        .card-container {\n            height: 425px;\n        }\n    }\n    @media screen and (min-width: 700px) and (max-width: 990px) {\n        .card-container {\n            height: 350px;\n        }\n    }\n`;\n\nclass ProjectCard extends React.Component {\n    constructor(props) {\n        super(props);\n        this.img = props.img;\n        this.title = props.title;\n        this.scale = props.scale;\n        this.demoLink = props.demoLink;\n        this.state = {\n            overlayVisible: false,\n        };\n        this.overlayData = props.overlayData;\n    }\n    showOverlay = () => (\n        this.setState({ overlayVisible: true })\n    )\n    hideOverlay = () => (\n        this.setState({ overlayVisible: false })\n    )\n    redirect = () => (\n        window.open(\n            this.overlayData[1],\n            '_blank',\n        )\n    );\n    redirectDemo = () => (\n        window.open(\n            this.demoLink,\n            '_blank',\n        )\n    )\n\n    // TODO: figure out src button placement\n    render() {\n        const titleValue = this.title[0],\n            subTitleValue = this.title[1],\n            altValue = this.title[2];\n\n        const overlayBody = this.overlayData[0];\n\n        return (\n            <Styles>\n                <div className=\"project-card\" onClick={this.showOverlay}>\n                    <div className=\"card-container\">\n                        <img className=\"card-img\" src={this.img} alt={altValue} style={{ width: this.scale + \"%\" }} />\n                        <span className=\"overlay\" />\n                    </div>\n                    <div className=\"text-container\">\n                        <p id={\"project-title\"}>{titleValue}</p>\n                        <p id={\"project-sub-title\"}>{subTitleValue}</p>\n                    </div>\n                </div>\n                <Modal size=\"lg\" scrollable={true} show={this.state.overlayVisible} onHide={this.hideOverlay}>\n                    <Modal.Header closeButton>\n                        <Modal.Title>\n                            <h1>{titleValue}</h1>\n                            <h2>{subTitleValue}</h2>\n                        </Modal.Title>\n                    </Modal.Header>\n                    <Modal.Body>\n                        {overlayBody}\n                        <Button variant=\"primary\" className=\"float-right src\" onClick={this.redirect} style={{ visibility: (this.overlayData.length > 1 ? 'visible' : 'hidden') }}>\n                            <div className=\"btn-content\">\n                                <FontAwesomeIcon icon={faGithub} className=\"github-icon\" />\n                                <a className=\"src-link\">src</a>\n                            </div>\n                        </Button>\n                        <Button variant=\"primary\" className=\"float-right demo\" onClick={this.redirectDemo} style={{ display: (this.demoLink ? 'block' : 'none') }}>\n                            <a>Demo</a>\n                        </Button>\n                    </Modal.Body>\n                </Modal>\n            </Styles>\n        );\n    }\n}\n\nexport default ProjectCard;\n","export default __webpack_public_path__ + \"static/media/user.e40da206.png\";","export default __webpack_public_path__ + \"static/media/ops-tile.3ed45853.png\";","export default __webpack_public_path__ + \"static/media/rtx-tile.81062f84.png\";","export default __webpack_public_path__ + \"static/media/slide-tile.8902e736.png\";","export default __webpack_public_path__ + \"static/media/ea-logo.6ea0ec46.png\";","export default __webpack_public_path__ + \"static/media/ultsoft.eb750c3b.png\";","export default __webpack_public_path__ + \"static/media/appView.a355e91b.png\";","export default __webpack_public_path__ + \"static/media/postman.b52ab563.png\";","export default __webpack_public_path__ + \"static/media/pong.e48826ad.png\";","export default __webpack_public_path__ + \"static/media/game.6c141541.png\";","export default __webpack_public_path__ + \"static/media/side.2a19e1e5.png\";","export default __webpack_public_path__ + \"static/media/top.9245e139.png\";","export default __webpack_public_path__ + \"static/media/server.0a8f8f3c.png\";","export default __webpack_public_path__ + \"static/media/iter1.1a133f47.png\";","export default __webpack_public_path__ + \"static/media/board.9fbba66c.png\";","export default __webpack_public_path__ + \"static/media/watch-app.7a36e0a3.png\";","export default __webpack_public_path__ + \"static/media/watch-music.72447696.png\";","export default __webpack_public_path__ + \"static/media/watch-timer.8421d8d1.png\";","export default __webpack_public_path__ + \"static/media/watch-wear.31825a3b.png\";","export default __webpack_public_path__ + \"static/media/ball-shadow.a7c14ece.png\";","export default __webpack_public_path__ + \"static/media/cow-acceled.13ad809c.png\";","export default __webpack_public_path__ + \"static/media/teapot.5c69d4e2.png\";","export default __webpack_public_path__ + \"static/media/ball-array.736a375b.png\";","\nimport React from 'react';\nimport { Container, Image } from 'react-bootstrap';\nimport styled from 'styled-components';\n\nimport ProjectCard from '../elements/ProjectCard';\n\n// tile images \nimport PRO from '../../assets/images/project-page/portfolio/user.png';\nimport OPS from '../../assets/images/project-page/opensprinkler/ops-tile.png';\nimport RTX from '../../assets/images/project-page/accel/rtx-tile.png';\nimport SLI from '../../assets/images/project-page/slide/slide-tile.png';\nimport EALogo from '../../assets/images/project-page/ea-intern/ea-logo.png';\n\n// overlay image collections \nimport ultsoft from '../../assets/images/project-page/ultimate/ultsoft.png';\nimport appView from '../../assets/images/project-page/ultimate/appView.png';\nimport postman from '../../assets/images/project-page/ultimate/postman.png';\n\nimport pong from '../../assets/images/project-page/mbed-pong/pong.png';\nimport gamePong from '../../assets/images/project-page/mbed-pong/game.png';\nimport sidePong from '../../assets/images/project-page/mbed-pong/side.png';\nimport topPong from '../../assets/images/project-page/mbed-pong/top.png';\nimport serverPong from '../../assets/images/project-page/mbed-pong/server.png';\n\nimport iter1 from '../../assets/images/project-page/portfolio/iter1.png';\n\nimport board from '../../assets/images/project-page/watch/board.png';\nimport watchApp from '../../assets/images/project-page/watch/watch-app.png';\nimport watchMusic from '../../assets/images/project-page/watch/watch-music.png';\nimport watchTimer from '../../assets/images/project-page/watch/watch-timer.png';\nimport watchWear from '../../assets/images/project-page/watch/watch-wear.png';\n\nimport ballShadow from '../../assets/images/project-page/accel/ball-shadow.png';\nimport cowAccel from '../../assets/images/project-page/accel/cow-acceled.png';\nimport teapot from '../../assets/images/project-page/accel/teapot.png';\nimport ballAray from '../../assets/images/project-page/accel/ball-array.png';\n\nimport '../../App.css';\nimport '../../Overlay.css';\n\nconst Styles = styled.div`\n    .container {\n        margin-top: 5%;\n        margin-bottom: 5%;\n    }\n    #title {\n        margin-bottom: 1.5rem;\n    }\n    .project-feature {\n        display: grid;\n        grid-template-columns: repeat(auto-fit, minmax(320px, 1fr));\n        grid-gap: 20px;\n    }\n    @media screen and (min-width: 320px) and (max-width: 449px) {\n        .project-feature {\n            grid-template-columns: 1fr;\n        }\n    }\n    @media screen and (min-width: 1200px) {\n        .project-feature {\n            grid-template-columns: repeat(auto-fit, minmax(450px, 1fr));\n        }\n    }\n`;\n\nfunction ElectronicArtsCard() {\n    const EAITitle = [\n        \"Electronic Arts\", \n        \"Internship 2021\", \n        \"Electronic Arts Logo\"\n    ]; \n    const overlayContent = (\n        <React.Fragment>\n            <div className=\"project-gallery top-gallery\">\n\n            </div>\n            <div className=\"project-description\">\n               <p>\n                    I was a part of the Engines Squad on the EADP (EA Digital Platform) team for the summer, working on a \n                    cross-platform Unreal Engine plugin for the Authentication, Commerce, and Telemetry modules of EADPSDK.\n               </p>\n               <p>\n                    My work focused on exposing SDK functionality to Unreal Engine using Blueprints; Unreal's visual scripting feature. \n                    To familiarize myself with the SDK, my first task was to build a demo UI for testing SDK modules using Unreal Engine's Slate UI Framework. \n                    Afterwards, I worked on Blueprint functionality, effectively writing bindings for Unreal Engine's particular flavor of C++. I also produced \n                    a document describing the design decisions and limitations encountered in replicating the SDK feature-set in Blueprint. When working on\n                    the Commerce module, I got to briefly play around with Unreal Rendering Threads, DirectX, and the Origin In-Game Overlay (IGO). In the \n                    Telemetry module, I prototyped a code generator for creating Blueprint bindings using Protocol Buffers. Finally, I did some internal work \n                    in the Origin SDK, adding a listener for user presence change. \n               </p>\n            </div>\n        </React.Fragment>\n    ); \n    const EAOverlay = [\n        overlayContent,\n        // \"https://github.com/Hierarchy-Heroes/hhchart-backend\"\n    ];\n    return (\n        <ProjectCard title={EAITitle} img={EALogo} scale={45} overlayData={EAOverlay} />\n    );\n}\n\nfunction UltimateCard() {\n    const UHRTitle = [\n        \"Co-Op Project\",\n        \"Full Stack Application\",\n        \"Ultimate Software Logo\"\n    ];\n    const overlayContent = (\n        <React.Fragment>\n            <div className=\"project-gallery top-gallery\">\n                <Image src={postman} className=\"img-fluid gallery-item\" />\n            </div>\n            <div className=\"project-gallery\">\n                <Image src={appView} className=\"img-fluid gallery-item\" />\n            </div>\n            <div className=\"project-description\">\n                <p>\n                    For the Fall 2020 semester, UMass partnered with Ultimate Software (now UGK), allowing students\n                    to participate in the specification, design, creation, and testing of a product on behalf of the\n                    company sponsor. As part of this cooperative/integrative experience, we were tasked with building\n                    a microservice that would fit into the broader ecosystem or suite of human resource software developed\n                    by UKG. More specifically, we were responsible for designing an interface that provides employees\n                    with a view of their company's structure and allows managers to make changes to it. Some features that we \n                    implemented include; adding, editing, transferring, and removing employees; uploading profile pictures \n                    for each employee; and searching the organization by a number of supported keywords. \n                </p>\n                <p>\n                    Prior to this project, I had absolutely zero experience working with databases and backend technologies \n                    and when it came time to split into teams, I decided to take advantage of this learning opportunity and \n                    joined the backend team. As such, I worked on setting up a collection of endpoints to service the front \n                    end's requests to the database. I also wrote middleware to facilitate authentication using JSON Web Tokens \n                    (JWT), authorization to give different users appropriate levels of access, and data validation to make sure that\n                    frontend requests were being properly formatted. Looking back, the first couple of weeks it seemed like I was drinking\n                    from a firehose, learning about Node, MongoDB, Web Tokens; among other things. As a direct result of this; however, I came \n                    away having a completely different understanding of the way that the internet works and a glimpse into how complex, data-driven\n                    applications are built. Furthermore, since I was a part of a 10 person team, this experience reinforced the importance of \n                    clear communication, comprehensive documentation, and extensive testing.\n                </p>\n                <p>\n                    For challenges, there were the usual but ever-present inaccuracies in time estimation and lapses in communication but also the \n                    fact that every member of the backend team was working with many of the technologies for the first time. A more technically rooted\n                    challenge was regarding the way we opted to store our data, which was in documents since we decided to use MongoDB. However, the design \n                    specification for our API was such that the frontend would receive the employee data already pre-constructed as a tree. But, since \n                    an addition, removal, or transfer of an employee could change the entire structure of the tree, the team had to find a way to\n                    minimize the number of flat list to tree conversions that we otherwise had to perform every time the frontend requested tree data. We tried storing the\n                    tree as a separate collection for each company but eventually realized that MongoDB is fairly limited when it comes to search queries \n                    on hierarchical structures. What we eventually decided on is to maintain a cache that is updated whenever the employee list is mutated. \n                    So any time the frontend requests employee data, we already have the most up-to-date flat and constructed lists that we can send over. \n                </p>\n                <p>\n                    There are a lot of other design decisions that I left out here for the sake of brevity, but I would like to conclude by saying that \n                    so far, this project is unique in the sheer number of moving parts that were involved and the communication that \n                    was required to make a cohesive, functional product. Although there are features we could have added or refinements that could have been made,\n                    I like to think that this is a taste of what's to come in the world of software engineering and I absolutely look forward to it. \n                </p>\n            </div>\n        </React.Fragment>\n    );\n    const UHROverlay = [\n        overlayContent,\n        \"https://github.com/Hierarchy-Heroes/hhchart-backend\"\n    ];\n    return (\n        <ProjectCard title={UHRTitle} img={ultsoft} scale={50} overlayData={UHROverlay} />\n    );\n\n}\n\nfunction PongCard() {\n    const MBPTitle = [\n        \"mbed-Pong\",\n        \"Semester Project\",\n        \"pong game\"\n    ];\n    const overlayContent = (\n        <React.Fragment>\n            <div className=\"project-gallery\">\n                <Image src={serverPong} className=\"img-fluid gallery-item\" />\n                <Image src={topPong} className=\"img-fluid gallery-item\" />\n                <Image src={sidePong} className=\"img-fluid gallery-item\" />\n                <Image src={gamePong} className=\"img-fluid gallery-item\" />\n            </div>\n            <div className=\"project-description\">\n                <p>\n                    Capstone project for UMASS course COMPSCI 335: Computer Architecture. My partner\n                    <a className=\"link\" href=\"https://github.com/DenizGuler\" target=\"_blank\" rel=\"noopener noreferrer\"> Deniz Guler </a>\n                    and I opted to create a networked, multiplayer pong game; the only restriction being that we could\n                    only use the supplied mbed LPC1768 microcontroller. The idea was simple: our microcontrollers represented\n                    the clients and would take input from an array of buttons. Meanwhile, a Node.js server would connect\n                    the clients, update gamestate parameters, and distribute the updated gamestate every tick for the duration of the game.\n                </p>\n                <p>\n                    Since the chip lacked support for wireless connectivity, we had to use ethernet and as neither of\n                    us had displays or ethernet adapters lying around, we needed to order the parts. But, we also did\n                    not have any relevant experience in networking and Node so we knew that we had to put in the work\n                    to figure out the fundamentals. While the parts were being delivered, we managed to set up a very\n                    basic Node.js server locally and mock the networking elements of the firmware by writing C code outside\n                    of the mbed environment. Before the parts even came in, we had a working prototype of gamestate sharing\n                    between the client and server. We could serialize a JavaScript object, write it to a socket, and read a\n                    response from a server. Awesome.\n                </p>\n                <p>\n                    The rest of the project was smooth sailing from there as we were just layering additional components on top\n                    of the foundation that we had already built. Upon adding the ethernet module, we hosted our server to test\n                    that multiple clients could connect and resolved a number of networking-related issues. When the display\n                    arrived, the backend was completely fleshed out and all that remained was to add graphical assets.\n                </p>\n                <p>\n                    Although this all sounds peachy, this project was not without its fair share of issues and learnings.\n                    We had a lot of trouble getting UDP sockets to work when we initially tried hosting on Heroku (as it only supports WebSockets)\n                    and had to switch to AWS EC2 instances. When we were adding support for replayability and playing several\n                    games back to back, we did not flush the socket and had a lot of unintended behavior that resulted from reading\n                    residual game states. Also, the mbed interface was at times difficult to work with as we came across\n                    issues with the editor, deprecated libraries, and a half-baked version control system.\n                </p>\n                <p>\n                    All in all, however, this project was a boatload of fun and I learned a lot about socket programming,\n                    networking, and Node. As a part of a computer architecture course, our reliance on libraries and other\n                    abstractions definitely made me appreciate the inner workings of low level machinery that much more.\n                </p>\n            </div>\n        </React.Fragment>\n    );\n\n    const MBPOverlay = [\n        overlayContent,\n        \"https://github.com/Mbed-Pong\"\n    ];\n    return (\n        <ProjectCard title={MBPTitle} img={pong} scale={50} overlayData={MBPOverlay} demoLink={\"https://www.youtube.com/watch?v=hOHv9d9GC_Y&feature=youtu.be\"}/>\n    );\n}\n\n// faceid logo: https://macteo.it/ios/2017/09/28/face-id.html\nfunction PortfolioCard() {\n    const PFTitle = [\n        \"Personal Website\",\n        \"React App\",\n        \"Description\",\n    ];\n    const overlayContent = (\n        <React.Fragment>\n            <div className=\"project-gallery\">\n                <Image src={iter1} className=\"img-fluid gallery-item\" />\n            </div>\n            <div className=\"project-description\">\n                <p>\n                    I've always wanted to get experience with web development; it seemed like the ultimate creative outlet,\n                    an immediate extension of your personality and ideas. But every time I sat down and tried to make something, the end result was frustration.\n                    Any deviation from online tutorials resulted in total disaster, with CSS doing things that I didn't want or not doing anything at all.\n                    More recently, I reckoned it was time that I built a proper showcase for the projects that I've been working on over the years, with\n                    the intent of giving viewers a comprehensive rundown of each experience, the lessons learned, and the hitches experienced along the way.\n                </p>\n                <p>\n                    So, I buckled down and started working, drafting layouts and experimenting with Flexbox and CSS grid. The first iteration, I was committed\n                    to keeping the project \"pure\", hoping to write it entirely in React.js with no libraries. I also opted for a multi-page design, dedicating\n                    each project its own page and custom content. Pretty soon, I scrapped that idea in favor of a single-page design, with a gallery of reusable\n                    project templates and a static navigation bar. At that point, I was struggling with responsiveness and decided to migrate the project to Bootstrap\n                    and, swallowing my pride, started using libraries.\n                </p>\n                <p>\n                    However, what kept it interesting the whole time was that, throughout every iteration of the project, I was learning something new. The first time\n                    around, I was getting comfortable with React components and basic CSS. The next attempt, I shifted my focus to modular design, sass style sheets,\n                    and media queries. Finally, upon implementing Bootstrap, I shifted to styled components and started familiarizing myself with the component lifecycle\n                    and conditional rendering. I'm looking forward to all the things I'll learn while maintaining this site in the future!\n                </p>\n            </div>\n        </React.Fragment>\n    );\n    const PFOverlay = [\n        overlayContent,\n        \"https://github.com/vsoltan/portfolio\",\n    ];\n    return (\n        <ProjectCard title={PFTitle} img={PRO} scale={25} overlayData={PFOverlay} />\n    );\n}\n\nfunction OpenSprinklerCard() {\n    const OSTitle = [\n        \"OpenSprinkler\",\n        \"Internship 2020\",\n        \"OpenSprinkler Dashboard\"\n    ];\n    const overlayContent = (\n        <React.Fragment>\n            <div className=\"project-gallery\">\n                <Image src={OPS} className=\"img-fluid gallery-item\" />\n            </div>\n            <div className=\"project-description\">\n                <p>\n                    OpenSprinkler is an open source, web-based smart sprinkler controller for lawn and plant watering.\n                    As a firmware intern, I am working on implementing user-requested features while maintaining and\n                    improving the functionality of the OpenSprinkler platform. So far, my work has included adding MQTT\n                    integration, expanding time-keeping and job-queue restructuring capabilities,\n                    and improving home automation hub compatibility.\n                </p>\n            </div>\n        </React.Fragment>\n    );\n    const OSOverlay = [\n        overlayContent,\n        \"https://github.com/OpenSprinkler/OpenSprinkler-Firmware\",\n    ];\n    return (\n        <ProjectCard title={OSTitle} img={OPS} scale={75} overlayData={OSOverlay} demoLink={\"http://demo.opensprinkler.com\"} />\n    );\n}\n\nfunction SimpleWatchCard() {\n    const WatchTitle = [\n        \"Simple Watch\",\n        \"Semester Project\",\n        \"Project Schematic\",\n    ];\n    const overlayContent = (\n        <React.Fragment>\n            <div className=\"project-gallery\">\n                <Image src={watchWear} className=\"img-fluid gallery-item\" />\n                <Image src={watchMusic} className=\"img-fluid gallery-item\" />\n                <Image src={watchTimer} className=\"img-fluid gallery-item\" />\n                <Image src={watchApp} className=\"img-fluid gallery-item\" />\n            </div>\n            <div className=\"project-description\">\n                <p>\n                    Capstone project for UMASS course CICS 290M: Physical Computing (now CS 256). My partner,\n                    <a className=\"link\" href=\"https://github.com/DenizGuler\" target=\"_blank\" rel=\"noopener noreferrer\"> Deniz Guler </a>\n                    and I decided to create an affordable and most importantly, capable wearable time-keeping device. Built on the Espressif\n                    esp32 platform and costing less than $15 in parts, we opted to create a device that not only tells the time, but provides some\n                    connectivity with our personal devices.\n                </p>\n                <p>\n                    I worked on the firmware that would power the watch, building out the wireless infrastructure,\n                    applets (media controls, stopwatch, and weather), and navigation system. In collaboration with our professor, we designed a custom\n                    PCB that allowed us to place the battery header on the bottom of the board and solder the display, reducing the thickness of the design.\n                    The 3D-printed enclosure has a cutout for the rotary encoder that drives the navigation system, cycling through the applets and their\n                    respective options, made available through the home screen.\n                </p>\n                <p>\n                    This was truly a one of a kind experience in the scope of my undergraduate education. Although we had to make some compromises given our\n                    target price point, we had complete control over every element of our project and we built it entirely from the ground up. Looking back,\n                    the only issue that we weren't able to resolve was related to Bluetooth throughput on our SOC. Occasionally, OpenWeatherMap API would send\n                    more data than usual, and the device wouldn't be able to read the entire JSON string, resulting in incomplete data. Otherwise, the end product\n                    surpassed all expectations: media controls have very low latency, the battery life is enough to get you through the day, and the navigation is\n                    pretty intuitive. Check it out in action:\n                </p>\n            </div>\n        </React.Fragment>\n    );\n    const WatchOverlay = [\n        overlayContent,\n        \"https://github.com/vsoltan/SimpleOS\",\n    ];\n    return (\n        <ProjectCard title={WatchTitle} img={board} scale={40} overlayData={WatchOverlay} demoLink={\"https://www.youtube.com/watch?v=erve9Y-6WI4&feature=youtu.be\"} />\n    );\n}\n\nfunction AcceleratorCard() {\n    const AccTitle = [\n        \"Raytracing Accelerator\",\n        \"Coursework Extension\",\n        \"Ball Array Render\"\n    ];\n    const overlayContent = (\n        <React.Fragment>\n            <div className=\"project-gallery\">\n                <Image src={cowAccel} className=\"img-fluid gallery-item\" />\n                <Image src={ballShadow} className=\"img-fluid gallery-item\" />\n                <Image src={teapot} className=\"img-fluid gallery-item\" />\n                <Image src={ballAray} className=\"img-fluid gallery-item\" />\n            </div>\n            <div className=\"project-description\">\n                <p>\n                    As part of my Introduction to Graphics course (CS 373), we were asked to implement a rudimentary ray tracer using THREE.js\n                    and webGL. In computer graphics, ray tracing is an alternative to rasterization for rendering, where lighting dynamics are simulated\n                    in real-time. While the lighting of the image is more accurate, this is a very computationally intensive task, limited by the number\n                    of (light) ray-shape intersections that the renderer has to compute.\n                </p>\n                <p>\n                    We can use an acceleration structure to drastically reduce the computational requirements for rendering a scene, enabling more\n                    complex lighting arrangements as well as super-sampled and higher fidelity images. An example of an acceleration structure, and\n                    the one used in my implementation, is a bounding volume hierarchy (BVH) tree. Before the raytracer runs, we can construct a tree which,\n                    at every level, uses a bounding box to specify which geometry is contained in a particular area of the scene. Therefore, if a ray\n                    doesn't intersect a bounding box at some level in the tree, we can forego calculating intersections with the geometry contained within\n                    that bounding box.\n                </p>\n                <p>\n                    The optimization gains were incredible. The cow model from the first image (above), took 9 minutes to render at 400x400\n                    resolution with acceleration turned off. With acceleration enabled, it completed in 15 seconds. The rest of the images\n                    in the gallery are scenes from the original assignment but super-sampled, with additional lighting sources included, and\n                    rendered at higher resolutions: these configurations would take hours without acceleration turned on.\n                </p>\n            </div>\n        </React.Fragment>\n    );\n    const AccOverlay = [\n        overlayContent,\n        \"https://github.com/vsoltan/rtx-accel\",\n    ];\n    return (\n        <ProjectCard title={AccTitle} img={RTX} scale={75} overlayData={AccOverlay} demoLink={\"https://www.youtube.com/watch?v=pj4oyJgUgVc&feature=youtu.be\"} />\n    );\n}\n\nfunction SlideCard() {\n    const SlideTitle = [\n        \"Slide Business Card\",\n        \"Personal Project\",\n        \"App Landing Page\"\n    ];\n    // https://app-mockup.com/ios/# to create image\n    const overlayContent = (\n        <React.Fragment>\n            <div className=\"project-gallery\"></div>\n            <div className=\"project-description\">\n                <p>\n                    After my first year in university, a group of my friends and I decided to spend the summer creating a mobile\n                    application with the goal of simplifying the process of sharing social media and personal information. We envisioned an application\n                    that would seamlessly encode your emails, social media profiles, even resumes into one easy-to-share code.\n                </p>\n                <p>\n                    Since this was our first time developing for mobile, we had to clear a large learning curve before we could translate the nuances\n                    of our idea to the actual project. Starting with storyboards and YouTube tutorials we created the fundamental components of\n                    the application: a QR scanner, segues between views, and the general layout of a login page. As we became more comfortable, we\n                    started building out the back end using Firebase, adding alternative forms of authentication through Google and Facebook, and fleshing\n                    out the general functionality of the app: JSON encoding/decoding, data retrieval, and contact creation upon scanning a code. At this\n                    point, I decided to refactor the entire project to follow the Model-View-Controller (MVC) design pattern and while rewriting a large chunk\n                    of the project code, opted to ditch storyboards in favor of a programmatic approach.\n                </p>\n                <p>\n                    Although the end result fell short of our initial expectations, I learned a lot about version control, asynchronous programming,\n                    and design methodology. In fact, we recently decided to give the app another shot using flutter, with a more cohesive direction,\n                    multi-platform support, and a lot more experience under our belts.\n                </p>\n            </div>\n        </React.Fragment>\n    );\n    const SlideOverlay = [\n        overlayContent,\n        \"https://github.com/vsoltan/Slide\",\n    ];\n    return (\n        <ProjectCard title={SlideTitle} img={SLI} scale={30} overlayData={SlideOverlay} />\n    )\n}\n\n// TODO: create a pinned area where the tiles are bigger and the rest are smaller\nconst Featured = () => (\n    <Styles>\n        <Container>\n            <h1 id={\"title\"}>My Work.</h1>\n            <div className=\"project-feature\">\n                {ElectronicArtsCard()}\n                {UltimateCard()}\n                {PongCard()}\n                {SimpleWatchCard()}\n                {AcceleratorCard()}\n                {PortfolioCard()}\n                {OpenSprinklerCard()}\n                {SlideCard()}\n            </div>\n        </Container>\n    </Styles>\n);\n\nexport default Featured;","\nimport React from \"react\";\nimport { Container } from \"react-bootstrap\";\nimport styled from \"styled-components\";\n\nconst Styles = styled.div`\n    .container {\n        margin-top: 5%;\n        margin-bottom: 5%;\n    }\n    #title {\n        margin-bottom: 1.5rem;\n    }\n`;\n\nconst Acknowledgements = () => (\n    <Styles>\n        <Container>\n            <h1 id=\"title\">Thank You!</h1>\n            <p>\n                I hope you enjoyed reading about some of the cool things I've been working on over the years! Please reach out regarding\n                my projects, future opportunities, or just to say hello. A special thank you to Evgeni Belin for his passion for learning,\n                mentorship, and lectures on all sorts of interesting things.\n            </p>\n        </Container>\n    </Styles>\n);\n\nexport default Acknowledgements;","\nimport React from 'react';\nimport { Container } from 'react-bootstrap';\nimport styled from 'styled-components';\nimport '../../App.css';\n\nconst Styles = styled.div`\n    p {\n        font-family: Metropolis-Thin;\n        margin-bottom: 1.5rem;\n    }\n`;\n\nconst Footer = () => (\n    <Styles>\n        <Container>\n            <p>Made with React, Bootstrap, and CSS.</p>\n        </Container>\n    </Styles>\n)\n\nexport default Footer;","import React from 'react';\nimport NavigationBar from './components/elements/NavigationBar';\nimport Header from './components/pages/Header';\nimport Featured from './components/pages/Projects';\nimport Acknowledgements from './components/pages/Thanks';\nimport Footer from './components/pages/Footer';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <NavigationBar />\n      <Header />\n      <Featured />\n      <Acknowledgements />\n      <Footer />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n  // [::1] is the IPv6 localhost address.\n  window.location.hostname === '[::1]' ||\n  // 127.0.0.0/8 are considered localhost for IPv4.\n  window.location.hostname.match(\n    /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n  )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n            'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}