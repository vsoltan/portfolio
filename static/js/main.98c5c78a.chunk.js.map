{"version":3,"sources":["assetts/images/project-page/opensprinkler/ops-tile.png","assetts/images/project-page/ultimate/ultsoft.png","assetts/soltan-swe.pdf","assetts/images/about-page/umass-cs.png","assetts/images/about-page/aubri.png","assetts/images/about-page/prof.jpeg","assetts/images/project-page/portfolio/user.png","assetts/images/project-page/accel/rtx-tile.png","assetts/images/project-page/slide/slide-tile.png","assetts/images/project-page/portfolio/iter1.png","assetts/images/project-page/watch/board.png","assetts/images/project-page/watch/watch-app.png","assetts/images/project-page/watch/watch-music.png","assetts/images/project-page/watch/watch-timer.png","assetts/images/project-page/watch/watch-wear.png","assetts/images/project-page/accel/ball-shadow.png","assetts/images/project-page/accel/cow-acceled.png","assetts/images/project-page/accel/teapot.png","assetts/images/project-page/accel/ball-array.png","assetts/images/project-page/slide/slide-config.png","assetts/images/project-page/slide/slide-qr.png","components/elements/NavigationBar.js","components/pages/Header.js","components/elements/ProjectCard.js","components/pages/Projects.js","components/pages/Thanks.js","components/pages/Footer.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Styles","styled","div","scrollToTop","scroll","NavigationBar","props","showContactForm","setState","contactFormVisible","hideContactForm","showAboutPage","aboutPageVisible","hideAboutPage","toggleOverlayPopup","copiedOverlayVisible","state","emailButton","React","createRef","className","Container","onClick","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","this","href","resume","download","Modal","size","scrollable","show","onHide","Header","closeButton","Title","Body","InputGroup","Text","Button","navigator","clipboard","writeText","Image","src","umasscs","aubri","Component","wrappedContent","Row","Col","target","rel","icon","faGithub","faLinkedin","faTwitter","prof","ProjectCard","showOverlay","overlayVisible","hideOverlay","redirect","window","open","overlayData","redirectDemo","demoLink","img","title","scale","titleValue","subTitleValue","altValue","overlayBody","alt","style","width","variant","display","Featured","UHROverlay","Fragment","ultsoft","UltimateCard","PFOverlay","iter1","PRO","PortfolioCard","OSOverlay","OPS","OpenSprinklerCard","WatchOverlay","watchWear","watchMusic","watchTimer","watchApp","board","SimpleWatchCard","AccOverlay","cowAccel","ballShadow","teapot","ballAray","RTX","AcceleratorCard","SlideOverlay","slideConfig","slideQR","SLI","SlideCard","Acknowledgements","Footer","App","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.98c5c78a.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/ops-tile.8b4d139a.png\";","module.exports = __webpack_public_path__ + \"static/media/ultsoft.f317928e.png\";","module.exports = __webpack_public_path__ + \"static/media/soltan-swe.662753e3.pdf\";","module.exports = __webpack_public_path__ + \"static/media/umass-cs.ed7ab496.png\";","module.exports = __webpack_public_path__ + \"static/media/aubri.c880a0bd.png\";","module.exports = __webpack_public_path__ + \"static/media/prof.a2772c68.jpeg\";","module.exports = __webpack_public_path__ + \"static/media/user.9386cd15.png\";","module.exports = __webpack_public_path__ + \"static/media/rtx-tile.143f07e9.png\";","module.exports = __webpack_public_path__ + \"static/media/slide-tile.8d502578.png\";","module.exports = __webpack_public_path__ + \"static/media/iter1.3d27b462.png\";","module.exports = __webpack_public_path__ + \"static/media/board.32c40d6f.png\";","module.exports = __webpack_public_path__ + \"static/media/watch-app.d108d188.png\";","module.exports = __webpack_public_path__ + \"static/media/watch-music.34999225.png\";","module.exports = __webpack_public_path__ + \"static/media/watch-timer.52e48d32.png\";","module.exports = __webpack_public_path__ + \"static/media/watch-wear.50dec4d4.png\";","module.exports = __webpack_public_path__ + \"static/media/ball-shadow.4979bd21.png\";","module.exports = __webpack_public_path__ + \"static/media/cow-acceled.1a103d6d.png\";","module.exports = __webpack_public_path__ + \"static/media/teapot.fd3b7464.png\";","module.exports = __webpack_public_path__ + \"static/media/ball-array.1697b9c5.png\";","module.exports = __webpack_public_path__ + \"static/media/slide-config.dbe662fd.png\";","module.exports = __webpack_public_path__ + \"static/media/slide-qr.8f983faf.png\";","\nimport React from 'react';\nimport { Container, Image } from 'react-bootstrap';\nimport Modal from 'react-bootstrap/Modal';\nimport InputGroup from 'react-bootstrap/InputGroup';\nimport Button from 'react-bootstrap/Button';\nimport { animateScroll as scroll } from \"react-scroll\";\nimport styled from 'styled-components';\n\nimport resume from '../../assetts/soltan-swe.pdf';\n\nimport '../../App.css';\nimport '../../Overlay.css';\nimport \"bootstrap/js/src/collapse.js\";\n\n// about me modal assetts \nimport umasscs from '../../assetts/images/about-page/umass-cs.png';\nimport aubri from '../../assetts/images/about-page/aubri.png';\n\n\nconst Styles = styled.div`\n    .navbar {\n      background-color: white;\n      padding: 1rem 1rem;\n      border-bottom-style: solid;\n      border-width: 1px;\n      border-color: black;\n    }\n    .navbar-nav .nav-link {\n      color: black;\n      font-size: 17px;\n      font-family: Metropolis-Bold;\n      padding: 0 1.5em 0 1.5em;\n      cursor: pointer;\n    }\n    .nav-link.last {\n      padding-right: 0em;\n    }\n    .navbar-brand {\n      color: black;\n      font-size: 20px;\n      font-family: Metropolis-Bold;\n      cursor: pointer;\n\t}\n    .nav-item { // to get collapse bar to the right\n      text-align: right;\n    }\n    @media screen and (min-width: 0px) and (max-width: 991px) {\n      .nav-link.last { \n        padding-right: 1.5rem;\n      }\n    }\n`;\n\nconst scrollToTop = () => {\n\tscroll.scrollToTop();\n};\n\nclass NavigationBar extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tcontactFormVisible: false,\n\t\t\tcopiedOverlayVisible: true,\n\t\t\taboutPageVisible: false,\n\t\t}\n\t\tthis.emailButton = React.createRef();\n\t}\n\tshowContactForm = () => (\n\t\tthis.setState({ contactFormVisible: true })\n\t)\n\thideContactForm = () => (\n\t\tthis.setState({ contactFormVisible: false })\n\t)\n\tshowAboutPage = () => (\n\t\tthis.setState({ aboutPageVisible: true })\n\t)\n\thideAboutPage = () => (\n\t\tthis.setState({ aboutPageVisible: false })\n\t)\n\ttoggleOverlayPopup = () => (\n\t\tthis.setState({ copiedOverlayVisible: !this.state.copiedOverlayVisible })\n\t)\n\trender() {\n\t\treturn (\n\t\t\t<Styles>\n\t\t\t\t<nav className=\"navbar navbar-expand-lg fixed-top\">\n\t\t\t\t\t<Container>\n\t\t\t\t\t\t<a className=\"navbar-brand\" onClick={scrollToTop}>valeriy soltan</a>\n\t\t\t\t\t\t<button className=\"navbar-toggler navbar-light\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarTogglerDemo02\" aria-controls=\"navbarTogglerDemo02\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n\t\t\t\t\t\t\t<span className=\"navbar-toggler-icon\"></span>\n\t\t\t\t\t\t</button>\n\t\t\t\t\t\t<div className=\"collapse navbar-collapse\" id=\"navbarTogglerDemo02\">\n\t\t\t\t\t\t\t<ul className=\"navbar-nav ml-auto mt-2 mt-lg-0\">\n\t\t\t\t\t\t\t\t<li className=\"nav-item active\">\n\t\t\t\t\t\t\t\t\t<a className=\"nav-link\" onClick={this.showAboutPage}>About</a>\n\t\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t\t<li className=\"nav-item active\">\n\t\t\t\t\t\t\t\t\t<a className=\"nav-link\" href={resume} download='soltan-swe.pdf'>Resume</a>\n\t\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t\t<li className=\"nav-item\">\n\t\t\t\t\t\t\t\t\t<a className=\"nav-link last\" onClick={this.showContactForm}>Contact</a>\n\t\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t</ul>\n\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t<Modal size=\"lg\" scrollable={true} show={this.state.contactFormVisible} onHide={this.hideContactForm}>\n\t\t\t\t\t\t\t<Modal.Header closeButton>\n\t\t\t\t\t\t\t\t<Modal.Title>\n\t\t\t\t\t\t\t\t\t<h1>Contact</h1>\n\t\t\t\t\t\t\t\t</Modal.Title>\n\t\t\t\t\t\t\t</Modal.Header>\n\t\t\t\t\t\t\t<Modal.Body>\n\t\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t\t<p>Please send all inquiries to the following address: </p>\n\t\t\t\t\t\t\t\t\t<span>\n\t\t\t\t\t\t\t\t\t\t<InputGroup.Text id=\"email-text\">vsoltan@umass.edu</InputGroup.Text>\n\t\t\t\t\t\t\t\t\t\t<Button className=\"float-right\" id=\"email-app-button\">\n\t\t\t\t\t\t\t\t\t\t\t<a href=\"mailto:vsoltan@umass.edu\">Open in App</a>\n\t\t\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t\t\t<Button className=\"float-right\" onClick={() => { navigator.clipboard.writeText(\"vsoltan@umass.edu\") }}>Copy</Button>\n\t\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</Modal.Body>\n\t\t\t\t\t\t</Modal>\n\n\t\t\t\t\t\t{/* About me, should probably make this its own component */}\n\t\t\t\t\t\t<Modal size=\"lg\" scrollable={true} show={this.state.aboutPageVisible} onHide={this.hideAboutPage}>\n\t\t\t\t\t\t\t<Modal.Header closeButton>\n\t\t\t\t\t\t\t\t<Modal.Title>\n\t\t\t\t\t\t\t\t\t<h1>About Me</h1>\n\t\t\t\t\t\t\t\t</Modal.Title>\n\t\t\t\t\t\t\t</Modal.Header>\n\t\t\t\t\t\t\t<Modal.Body>\n\t\t\t\t\t\t\t\t<div className=\"project-gallery\">\n\t\t\t\t\t\t\t\t\t<Image src={umasscs} className=\"img-fluid gallery-item\" />\n\t\t\t\t\t\t\t\t\t<Image src={aubri} className=\"img-fluid gallery-item\" />\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\tThis is a work in progress!\n\t\t\t\t\t\t\t</Modal.Body>\n\t\t\t\t\t\t</Modal>\n\n\n\t\t\t\t\t</Container>\n\t\t\t\t</nav>\n\t\t\t</Styles>\n\t\t);\n\t}\n}\n\nexport default NavigationBar;","\nimport React from 'react';\nimport styled from 'styled-components';\nimport prof from '../../assetts/images/about-page/prof.jpeg';\nimport { Container, Row, Col, Image } from 'react-bootstrap';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {\n    faLinkedin,\n    faGithub,\n    faTwitter,\n} from '@fortawesome/free-brands-svg-icons';\n\nimport '../../App.css';\n\nconst Styles = styled.div`\n    .container {\n        margin-top: 5%;\n    }\n    p {\n        margin-bottom: 1.2rem;\n    }\n    .portrait {\n        object-fit: cover;\n        width: 100%;\n        height: 100%;\n        box-sizing: border-box;\n        max-height: 450px;\n        border-radius: 5px;\n    }\n    .img-container {\n        display: flex;\n    }\n    #wrap-around {\n        display: none;\n    }\n    .header {\n        margin-bottom: 1.2rem;\n    }\n    .social-tab {\n        padding-left: 0; \n    }\n    .social-item {\n        padding-right: 15px;\n    }\n    .twitter {\n        color: #49a1eb;\n    }\n    .github {\n        color: #000000; \n    }\n    .linkedin {\n        color: #0a66c2\n    }\n    @media screen and (min-width: 0px) and (max-width: 767px) {\n        #wrap-display { display: block; }\n        .col-images { display: none; }  /* hide images on small screens */\n        \n    }\n    @media screen and (min-width: 768px) and (max-width: 991px) {\n        #wrap-display { display: none; }\n        #wrap-around { \n            display: block;\n            padding-top: 1.5em; \n        }\n    }\n`;\n\nconst wrappedContent = \"Actively looking for Summer 2021 opportunities: I have a breadth of experience working in dynamic environments across embedded and mobile platforms.\";\n\nconst Header = () => (\n    <Styles>\n        <div id=\"page-top\">\n            <Container className=\"container\">\n                <Row>\n                    <Col className=\"col-sm\">\n                        <div className=\"header\">\n                            <h1>Hey, I'm Valeriy, a Firmware Intern at <a className=\"link\" href=\"https://openthings.io/\" target=\"_blank\" rel=\"noopener noreferrer\">OpenThings.</a></h1>\n                            <div className=\"social-tab\">\n                                <a href=\"https://github.com/vsoltan\"\n                                    className=\"social-item github\" target=\"_blank\">\n                                    <FontAwesomeIcon icon={faGithub} size=\"2x\" />\n                                </a>\n                                <a href=\"https://www.linkedin.com/in/valeriy-soltan/\"\n                                    className=\"social-item linkedin\" target=\"_blank\">\n                                    <FontAwesomeIcon icon={faLinkedin} size=\"2x\" />\n                                </a>\n                                <a href=\"https://twitter.com/vsoltann\"\n                                    className=\"social-item twitter\" target=\"_blank\">\n                                    <FontAwesomeIcon icon={faTwitter} size=\"2x\" />\n                                </a>\n                            </div>\n                        </div>\n                        <div className=\"about\">\n                            <p>Currently working towards a B.S in Computer Science and Statistics at the University of Massachusetts—Amherst.</p>\n                            <p>Interested in deconstructing the way things work. Passionate about systems programming, computer architecture, and building\n                                robust solutions to problems.</p>\n                            <p id=\"wrap-display\">{wrappedContent}</p>\n                        </div>\n                    </Col>\n                    <Col className=\"col-sm col-images\">\n                        <div className=\"img-container\">\n                            <Image src={prof} className=\"portrait\" />\n                        </div>\n                        <p id=\"wrap-around\">{wrappedContent}</p>\n                    </Col>\n                </Row>\n            </Container>\n        </div>\n    </Styles>\n);\n\n\nexport default Header;\n\n","\nimport React from 'react';\nimport styled from 'styled-components';\nimport Modal from 'react-bootstrap/Modal'\nimport Button from 'react-bootstrap/Button';\nimport { faGithub } from \"@fortawesome/free-brands-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\nimport '../../App.css';\n\nconst Styles = styled.div`\n    .project-card {\n        position: relative;\n        background-color: var(--card-background);\n        border-radius: 5px;\n        color: transparent;\n        cursor: pointer;\n        width: 100%;\n    }\n    .project-card:hover {\n        color: white;\n        box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19);\n    }\n    .project-card:hover .overlay {\n        opacity: 1;\n    }\n    .card-container {\n        height: 425px;\n        display: flex;\n        justify-content: center;\n        align-items: center;\n    }\n    .card-img {\n        height: auto;\n        max-height: 100%;\n    }\n    .overlay {\n        background-color: var(--highlight-reduced-opacity);\n        opacity: 0;\n        height: 100%;\n        width: 100%;\n        position: absolute;\n        border-radius: 5px;\n    }\n    .text-container {\n        position: absolute;\n        top: 0;\n    }\n    #project-title {\n        font-family: Metropolis-Bold;\n        font-size: 22px;\n        margin: 20px 0px 0px 20px;\n    }\n    #project-sub-title {\n        font-family: Metropolis-Regular;\n        font-size: 18px;\n        margin: 0px 0px 0px 20px;\n    }\n`;\n\nclass ProjectCard extends React.Component {\n    constructor(props) {\n        super(props);\n        this.img = props.img;\n        this.title = props.title;\n        this.scale = props.scale;\n        this.demoLink = props.demoLink;\n        this.state = {\n            overlayVisible: false,\n        };\n        this.overlayData = props.overlayData;\n    }\n    showOverlay = () => (\n        this.setState({ overlayVisible: true })\n    )\n    hideOverlay = () => (\n        this.setState({ overlayVisible: false })\n    )\n    redirect = () => (\n        window.open(\n            this.overlayData[1],\n            '_blank',\n        )\n    );\n    redirectDemo = () => (\n        window.open(\n            this.demoLink,\n            '_blank',\n        )\n    )\n\n    // TODO: figure out src button placement\n    render() {\n        const titleValue = this.title[0],\n            subTitleValue = this.title[1],\n            altValue = this.title[2];\n\n        const overlayBody = this.overlayData[0];\n\n        return (\n            <Styles>\n                <div className=\"project-card\" onClick={this.showOverlay}>\n                    <div className=\"card-container\">\n                        <img className=\"card-img\" src={this.img} alt={altValue} style={{ width: this.scale + \"%\" }} />\n                        <span className=\"overlay\" />\n                    </div>\n                    <div className=\"text-container\">\n                        <p id={\"project-title\"}>{titleValue}</p>\n                        <p id={\"project-sub-title\"}>{subTitleValue}</p>\n                    </div>\n                </div>\n                <Modal size=\"lg\" scrollable={true} show={this.state.overlayVisible} onHide={this.hideOverlay}>\n                    <Modal.Header closeButton>\n                        <Modal.Title>\n                            <h1>{titleValue}</h1>\n                            <h2>{subTitleValue}</h2>\n                        </Modal.Title>\n                    </Modal.Header>\n                    <Modal.Body>\n                        {overlayBody}\n                        <Button variant=\"primary\" className=\"float-right src\" onClick={this.redirect}>\n                            <div className=\"btn-content\">\n                                <FontAwesomeIcon icon={faGithub} className=\"github-icon\" />\n                                <a className=\"src-link\">src</a>\n                            </div>\n                        </Button>\n                        <Button variant=\"primary\" className=\"float-right demo\" onClick={this.redirectDemo} style={{ display: (this.demoLink ? 'block' : 'none') }}>\n                            <a>Demo</a>\n                        </Button>\n                    </Modal.Body>\n                </Modal>\n            </Styles>\n        );\n    }\n}\n\nexport default ProjectCard;\n","\nimport React from 'react';\nimport { Container, Image } from 'react-bootstrap';\nimport styled from 'styled-components';\n\nimport ProjectCard from '../elements/ProjectCard';\n\n// tile images \nimport PRO from '../../assetts/images/project-page/portfolio/user.png';\nimport OPS from '../../assetts/images/project-page/opensprinkler/ops-tile.png';\nimport RTX from '../../assetts/images/project-page/accel/rtx-tile.png';\nimport SLI from '../../assetts/images/project-page/slide/slide-tile.png';\n\n// overlay image collections \nimport ultsoft from '../../assetts/images/project-page/ultimate/ultsoft.png';\n\nimport iter1 from '../../assetts/images/project-page/portfolio/iter1.png';\n\nimport board from '../../assetts/images/project-page/watch/board.png';\nimport watchApp from '../../assetts/images/project-page/watch/watch-app.png';\nimport watchMusic from '../../assetts/images/project-page/watch/watch-music.png';\nimport watchTimer from '../../assetts/images/project-page/watch/watch-timer.png';\nimport watchWear from '../../assetts/images/project-page/watch/watch-wear.png';\n\nimport ballShadow from '../../assetts/images/project-page/accel/ball-shadow.png';\nimport cowAccel from '../../assetts/images/project-page/accel/cow-acceled.png';\nimport teapot from '../../assetts/images/project-page/accel/teapot.png';\nimport ballAray from '../../assetts/images/project-page/accel/ball-array.png';\n\nimport slideConfig from '../../assetts/images/project-page/slide/slide-config.png';\nimport slideQR from '../../assetts/images/project-page/slide/slide-qr.png';\n\nimport '../../App.css';\nimport '../../Overlay.css';\n\nconst Styles = styled.div`\n    .container {\n        margin-top: 5%;\n        margin-bottom: 5%;\n    }\n    #title {\n        margin-bottom: 1.5rem;\n    }\n    .project-feature {\n        display: grid;\n        grid-template-columns: repeat(auto-fit, minmax(320px, 1fr));\n        grid-gap: 20px;\n    }\n    @media screen and (min-width: 320px) and (max-width: 449px) {\n        .project-feature {\n            grid-template-columns: 1fr;\n        }\n    }\n    @media screen and (min-width: 1200px) {\n        .project-feature {\n            grid-template-columns: repeat(auto-fit, minmax(450px, 1fr));\n        }\n    }\n`;\n\nfunction UltimateCard() {\n    const UHRTitle = [\n        \"Co-Op Project\", \n        \"Full Stack Application\",\n        \"Ultimate Software Logo\"\n    ]; \n    const overlayContent = (\n        <React.Fragment>\n            <div className=\"project-gallery\">\n                <Image src={ultsoft} className=\"img-fluid gallery-item\" />\n            </div>\n            <div className=\"project-description\">\n                <p>\n                    work in progress! \n                </p>\n            </div>\n        </React.Fragment>\n    );\n    const UHROverlay = [\n        overlayContent, \n        \"https://github.com/vsoltan\"\n    ];\n    return (\n        <ProjectCard title={UHRTitle} img={ultsoft} scale={50} overlayData={UHROverlay} />\n    );\n\n}\n\n// faceid logo: https://macteo.it/ios/2017/09/28/face-id.html\nfunction PortfolioCard() {\n    const PFTitle = [\n        \"Personal Website\",\n        \"React App\",\n        \"Description\",\n    ];\n    const overlayContent = (\n        <React.Fragment>\n            <div className=\"project-gallery\">\n                <Image src={iter1} className=\"img-fluid gallery-item\" />\n            </div>\n            <div className=\"project-description\">\n                <p>\n                    I've always wanted to get experience with web development; it seemed like the ultimate creative outlet,\n                    an immediate extension of your personality and ideas. But every time I sat down and tried to make something, the end result was frustration.\n                    Any deviation from online tutorials resulted in total disaster, with CSS doing things that I didn't want or not doing anything at all.\n                    More recently, I reckoned it was time that I built a proper showcase for the projects that I've been working on over the years, with\n                    the intent of giving viewers a comprehensive rundown of each experience, the lessons learned, and the hitches experienced along the way.\n                </p>\n                <p>\n                    So, I buckled down and started working, drafting layouts and experimenting with Flexbox and CSS grid. The first iteration, I was committed\n                    to keeping the project \"pure\", hoping to write it entirely in React.js with no libraries. I also opted for a multi-page design, dedicating\n                    each project its own page and custom content. Pretty soon, I scrapped that idea in favor of a single-page design, with a gallery of reusable\n                    project templates and a static navigation bar. At that point, I was struggling with responsiveness and decided to migrate the project to Bootstrap\n                    and, swallowing my pride, started using libraries.\n                </p>\n                <p>\n                    However, what kept it interesting the whole time was that, throughout every iteration of the project, I was learning something new. The first time\n                    around, I was getting comfortable with React components and basic CSS. The next attempt, I shifted my focus to modular design, sass style sheets,\n                    and media queries. Finally, upon implementing Bootstrap, I shifted to styled components and started familiarizing myself with the component lifecycle\n                    and conditional rendering. I'm looking forward to all the things I'll learn while maintaining this site in the future!\n                </p>\n            </div>\n        </React.Fragment>\n    );\n    const PFOverlay = [\n        overlayContent,\n        \"https://github.com/vsoltan/portfolio\",\n    ];\n    return (\n        <ProjectCard title={PFTitle} img={PRO} scale={35} overlayData={PFOverlay} />\n    );\n}\n\nfunction OpenSprinklerCard() {\n    const OSTitle = [\n        \"OpenSprinkler\",\n        \"Internship 2020\",\n        \"OpenSprinkler Dashboard\"\n    ];\n    const overlayContent = (\n        <React.Fragment>\n            <div className=\"project-gallery\">\n                <Image src={OPS} className=\"img-fluid gallery-item\" />\n            </div>\n            <div className=\"project-description\">\n                <p>\n                    OpenSprinkler is an open source, web-based smart sprinkler controller for lawn and plant watering.\n                    As a firmware intern, I am working on implementing user-requested features while maintaining and\n                    improving the functionality of the OpenSprinkler platform. So far, my work has included adding MQTT \n                    integration, expanding time-keeping and job-queue restructuring capabilities,\n                    and improving home automation hub compatibility.\n                </p>\n            </div>\n        </React.Fragment>\n    );\n    const OSOverlay = [\n        overlayContent,\n        \"https://github.com/OpenSprinkler/OpenSprinkler-Firmware\",\n    ];\n    return (\n        <ProjectCard title={OSTitle} img={OPS} scale={75} overlayData={OSOverlay} demoLink={\"http://demo.opensprinkler.com\"} />\n    );\n}\n\nfunction SimpleWatchCard() {\n    const WatchTitle = [\n        \"Simple Watch\",\n        \"Semester Project\",\n        \"Project Schematic\",\n    ];\n    const overlayContent = (\n        <React.Fragment>\n            <div className=\"project-gallery\">\n                <Image src={watchWear} className=\"img-fluid gallery-item\" />\n                <Image src={watchMusic} className=\"img-fluid gallery-item\" />\n                <Image src={watchTimer} className=\"img-fluid gallery-item\" />\n                <Image src={watchApp} className=\"img-fluid gallery-item\" />\n            </div>\n            <div className=\"project-description\">\n                <p>\n                    Capstone project for UMASS course CICS 290M: Physical Computing (now CS 256). My partner,\n                    <a className=\"link\" href=\"https://github.com/DenizGuler\" target=\"_blank\" rel=\"noopener noreferrer\"> Deniz Guler </a>\n                    and I decided to create an affordable and most importantly, capable wearable time-keeping device. Built on the Espressif\n                    esp32 platform and costing less than $15 in parts, we opted to create a device that not only tells the time, but provides some\n                    connectivity with our personal devices.\n                </p>\n                <p>\n                    I worked on the firmware that would power the watch, building out the wireless infrastructure,\n                    applets (media controls, stopwatch, and weather), and navigation system. In collaboration with our professor, we designed a custom\n                    PCB that allowed us to place the battery header on the bottom of the board and solder the display, reducing the thickness of the design.\n                    The 3D-printed enclosure has a cutout for the rotary encoder that drives the navigation system, cycling through the applets and their\n                    respective options, made available through the home screen.\n                </p>\n                <p>\n                    This was truly a one of a kind experience in the scope of my undergraduate education. Although we had to make some compromises given our\n                    target price point, we had complete control over every element of our project and we built it entirely from the ground up. Looking back,\n                    the only issue that we weren't able to resolve was related to Bluetooth throughput on our SOC. Occasionally, OpenWeatherMap API would send\n                    more data than usual, and the device wouldn't be able to read the entire JSON string, resulting in incomplete data. Otherwise, the end product\n                    surpassed all expectations: media controls have very low latency, the battery life is enough to get you through the day, and the navigation is\n                    pretty intuitive. Check it out in action:\n                </p>\n            </div>\n        </React.Fragment>\n    );\n    const WatchOverlay = [\n        overlayContent,\n        \"https://github.com/vsoltan/SimpleOS\",\n    ];\n    return (\n        <ProjectCard title={WatchTitle} img={board} scale={40} overlayData={WatchOverlay} demoLink={\"https://www.youtube.com/watch?v=erve9Y-6WI4&feature=youtu.be\"} />\n    );\n}\n\n// TODO: correct number mistake!!!!!!\n\nfunction AcceleratorCard() {\n    const AccTitle = [\n        \"Raytracing Accelerator\",\n        \"Coursework Extension\",\n        \"Ball Array Render\"\n    ];\n    const overlayContent = (\n        <React.Fragment>\n            <div className=\"project-gallery\">\n                <Image src={cowAccel} className=\"img-fluid gallery-item\" />\n                <Image src={ballShadow} className=\"img-fluid gallery-item\" />\n                <Image src={teapot} className=\"img-fluid gallery-item\" />\n                <Image src={ballAray} className=\"img-fluid gallery-item\" />\n            </div>\n            <div className=\"project-description\">\n                <p>\n                    As part of my Introduction to Graphics course (CS 373), we were asked to implement a rudimentary ray tracer using THREE.js\n                    and webGL. In computer graphics, ray tracing is an alternative to rasterization for rendering, where lighting dynamics are simulated\n                    in real-time. While the lighting of the image is more accurate, this is a very computationally intensive task, limited by the number\n                    of (light) ray-shape intersections that the renderer has to compute.\n                </p>\n                <p>\n                    We can use an acceleration structure to drastically reduce the computational requirements for rendering a scene, enabling more\n                    complex lighting arrangements as well as super-sampled and higher fidelity images. An example of an acceleration structure, and\n                    the one used in my implementation, is a bounding volume hierarchy (BVH) tree. Before the raytracer runs, we can construct a tree which,\n                    at every level, uses a bounding box to specify which geometry is contained in a particular area of the scene. Therefore, if a ray\n                    doesn't intersect a bounding box at some level in the tree, we can forego calculating intersections with the geometry contained within\n                    that bounding box.\n                </p>\n                <p>\n                    The optimization gains were incredible. The cow model from the first image (above), took 9 minutes to render at 400x400\n                    resolution with acceleration turned off. With acceleration enabled, it completed in 15 seconds. The rest of the images\n                    in the gallery are scenes from the original assignment but super-sampled, with additional lighting sources included, and\n                    rendered at higher resolutions: these configurations would take hours without acceleration turned on.\n                </p>\n            </div>\n        </React.Fragment>\n    );\n    const AccOverlay = [\n        overlayContent,\n        \"https://github.com/vsoltan/CS-373/tree/master/CS373HW7\",\n    ];\n    return (\n        <ProjectCard title={AccTitle} img={RTX} scale={75} overlayData={AccOverlay} demoLink={\"https://www.youtube.com/watch?v=pj4oyJgUgVc&feature=youtu.be\"} />\n    );\n}\n\nfunction SlideCard() {\n    const SlideTitle = [\n        \"Slide Business Card\",\n        \"Personal Project\",\n        \"App Landing Page\"\n    ];\n    // https://app-mockup.com/ios/# to create image\n    const overlayContent = (\n        <React.Fragment>\n            <div className=\"project-gallery\">\n                <Image src={slideConfig} className=\"img-fluid gallery-item\" />\n                <Image src={slideQR} className=\"img-fluid gallery-item\" />\n            </div>\n            <div className=\"project-description\">\n                <p>\n                    After my first year in university, a group of my friends and I decided to spend the summer creating a mobile\n                    application with the goal of simplifying the process of sharing social media and personal information. We envisioned an application\n                    that would seamlessly encode your emails, social media profiles, even resumes into one easy-to-share code.\n                </p>\n                <p>\n                    Since this was our first time developing for mobile, we had to clear a large learning curve before we could translate the nuances\n                    of our idea to the actual project. Starting with storyboards and YouTube tutorials we created the fundamental components of\n                    the application: a QR scanner, segues between views, and the general layout of a login page. As we became more comfortable, we\n                    started building out the back end using Firebase, adding alternative forms of authentication through Google and Facebook, and fleshing\n                    out the general functionality of the app: JSON encoding/decoding, data retrieval, and contact creation upon scanning a code. At this\n                    point, I decided to refactor the entire project to follow the Model-View-Controller (MVC) design pattern and while rewriting a large chunk\n                    of the project code, opted to ditch storyboards in favor of a programmatic approach.\n                </p>\n                <p>\n                    Although the end result fell short of our initial expectations, I learned a lot about version control, asynchronous programming,\n                    and design methodology. In fact, we recently decided to give the app another shot using flutter, with a more cohesive direction,\n                    multi-platform support, and a lot more experience under our belts.\n                </p>\n            </div>\n        </React.Fragment>\n    );\n    const SlideOverlay = [\n        overlayContent,\n        \"https://github.com/vsoltan/Slide\",\n    ];\n    return (\n        <ProjectCard title={SlideTitle} img={SLI} scale={30} overlayData={SlideOverlay} />\n    )\n}\n\n// TODO: create a pinned area where the tiles are bigger and the rest are smaller\nconst Featured = () => (\n    <Styles>\n        <Container>\n            <h1 id={\"title\"}>My Work.</h1>\n            <div className=\"project-feature\">\n                {UltimateCard()}\n                {PortfolioCard()}\n                {OpenSprinklerCard()}\n                {SimpleWatchCard()}\n                {AcceleratorCard()}\n                {SlideCard()}\n            </div>\n        </Container>\n    </Styles>\n);\n\nexport default Featured;","\nimport React from \"react\";\nimport { Container } from \"react-bootstrap\";\nimport styled from \"styled-components\";\n\nconst Styles = styled.div`\n    .container {\n        margin-top: 5%;\n        margin-bottom: 5%;\n    }\n    #title {\n        margin-bottom: 1.5rem;\n    }\n`;\n\nconst Acknowledgements = () => (\n    <Styles>\n        <Container>\n            <h1 id=\"title\">Thank You!</h1>\n            <p>\n                I hope you enjoyed reading about some of the cool things I've been working on over the years! Please reach out regarding\n                my projects, future opportunities, or just to say hello. A special thank you to Evgeni Belin for his passion for learning,\n                mentorship, and lectures on all sorts of interesting things.\n            </p>\n        </Container>\n    </Styles>\n);\n\nexport default Acknowledgements;","\nimport React from 'react';\nimport { Container } from 'react-bootstrap';\nimport styled from 'styled-components';\nimport '../../App.css';\n\nconst Styles = styled.div`\n    p {\n        font-family: Metropolis-Thin;\n        margin-bottom: 1.5rem;\n    }\n`;\n\nconst Footer = () => (\n    <Styles>\n        <Container>\n            <p>Made with React, Bootstrap, and CSS.</p>\n        </Container>\n    </Styles>\n)\n\nexport default Footer;","import React from 'react';\nimport NavigationBar from './components/elements/NavigationBar';\nimport Header from './components/pages/Header';\nimport Featured from './components/pages/Projects';\nimport Acknowledgements from './components/pages/Thanks';\nimport Footer from './components/pages/Footer';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <NavigationBar />\n      <Header />\n      <Featured />\n      <Acknowledgements />\n      <Footer />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}